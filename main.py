try:
    import mlx90614  # Melexis MLX90614 IR temperature sensor driver
    from hcsr04 import HCSR04  # HC-SR04 Ultrasonic Sensor Driver
    try:
        import ssd1306  # Import oledDisplay driver
        try:
            import network
            import wifimgr
            try:
                import webrepl
            except:
                print("Webrepl Module Import Error")
            try:
                import urequests as requests
                try:
                    import ujson as json
                    try:
                        import time
                        import machine
                        import framebuf
                        try:
                            try:
                                i2c = machine.SoftI2C(scl=machine.Pin(15), sda=machine.Pin(
                                    14))
                                try:
                                    tempSensor = mlx90614.MLX90614(i2c)
                                    proximitySensor = HCSR04(
                                        trigger_pin=2, echo_pin=13, echo_timeout_us=10000)
                                    try:
                                        oledDisplay = ssd1306.SSD1306_I2C(
                                            128, 64, i2c)  # 128 vw x 64 vh display
                                        try:
                                            try:
                                                wlan = wifimgr.get_connection()
                                                if wlan is None:
                                                    print(
                                                        "Could not initialize the network connection.")
                                                    # connectToNetwork()
                                                    while True:
                                                        pass  # Wait for network to connect
                                            except:
                                                print("WIFI MANAGER ERROR")
                                            try:
                                                # Pattarai Logo in Byte Array Format
                                                buffer = bytearray(b'0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x7f\0xfe\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x03\0xff\0xff\0xc0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x1f\0xff\0xff\0xf8\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x7f\0xff\0xff\0xfe\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0xff\0xff\0xff\0xff\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x03\0xff\0xff\0xff\0xff\0xc0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x07\0xff\0xfe\0x7f\0xff\0xe0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x0f\0xff\0xfe\0x7f\0xff\0xf0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x1f\0xff\0xfe\0x7f\0xff\0xf8\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xfe\0x7f\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x7f\0xff\0xfe\0x7f\0xff\0xfe\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0xff\0xff\0xfe\0x7f\0xff\0xff\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x01\0xff\0xbf\0xff\0x7f\0xfd\0xff\0x80\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x01\0xff\0x9f\0xff\0xff\0xf9\0xff\0x80\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x03\0xff\0xcf\0xff\0xff\0xf3\0xff\0xc0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x07\0xff\0xe7\0xfc\0x3f\0xe7\0xff\0xe0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x07\0xff\0xf3\0xe0\0x07\0xcf\0xff\0xe0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x0f\0xff\0xff\0x83\0xc1\0xff\0xff\0xf0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x0f\0xff\0xff\0x1f\0xf8\0xff\0xff\0xf0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x0f\0xff\0xfe\0x3f\0xfe\0x3f\0xff\0xf0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x1f\0xff\0xfc\0xff\0xff\0x3f\0xff\0xf8\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x1f\0xff\0xf8\0xff\0xff\0x9f\0xff\0xf8\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x1f\0xff\0xf9\0xe7\0xf3\0x8f\0xff\0xf8\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xf3\0xc7\0xf1\0xcf\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xf3\0x87\0xf1\0xcf\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xf3\0x87\0xf1\0xef\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xf3\0x87\0xf0\0xe7\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xe0\0x73\0x87\0xe0\0xe6\0x07\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xe0\0x73\0x80\0x00\0xe6\0x07\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xf3\0x80\0x01\0xcf\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xf3\0x80\0x01\0xcf\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xf1\0xc0\0x03\0xcf\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xf9\0xe0\0x03\0x9f\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xf8\0xf0\0x07\0x9f\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xfc\0xf0\0x0f\0x3f\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xfe\0x70\0x0f\0x3f\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xfe\0x70\0x0e\0x7f\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x1f\0xff\0xff\0x30\0x0e\0xff\0xff\0xf8\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x1f\0xff\0xf3\0x30\0x0c\0xcf\0xff\0xf8\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x1f\0xff\0xe7\0x90\0x0c\0xe7\0xff\0xf8\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x0f\0xff\0xcf\0x90\0x09\0xf3\0xff\0xf0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x0f\0xff\0x9f\0x90\0x09\0xf9\0xff\0xf0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x0f\0xff\0xbf\0xc0\0x09\0xfd\0xff\0xf0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x07\0xff\0xff\0xc0\0x01\0xff\0xff\0xe0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x07\0xff\0xff\0xc0\0x03\0xff\0xff\0xe0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x03\0xff\0xff\0xe0\0x07\0xff\0xff\0xc0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x01\0xff\0xff\0xff\0xff\0xff\0xff\0x80\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x01\0xff\0xff\0xf0\0x0f\0xff\0xff\0x80\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0xff\0xff\0xf8\0x0f\0xff\0xff\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x7f\0xff\0xf8\0x0f\0xff\0xfe\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x3f\0xff\0xf8\0x0f\0xff\0xfc\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x1f\0xff\0xff\0xff\0xff\0xf8\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x0f\0xff\0xf8\0x1f\0xff\0xf0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x07\0xff\0xfe\0x3f\0xff\0xe0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x03\0xff\0xff\0xff\0xff\0xc0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0xff\0xff\0xff\0xff\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x7f\0xff\0xff\0xfe\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x1f\0xff\0xff\0xf8\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x03\0xff\0xff\0xc0\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x7f\0xfe\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00\0x00')
                                                fb = framebuf.FrameBuffer(
                                                    buffer, 48, 48, framebuf.MVLSB)
                                                oledDisplay.fill(0)
                                                oledDisplay.framebuf.blit(
                                                    fb, 8, 0)
                                                oledDisplay.show()
                                                time.sleep_ms(2000)
                                            except:
                                                oledDisplay.fill(0)
                                                print("Logo Loading Error")
                                                oledDisplay.text(
                                                    "PATTARAI'S", 10, 20)
                                                oledDisplay.text(
                                                    "CALIDITAS", 20, 40)
                                                oledDisplay.show()
                                                time.sleep_ms(2000)
                                            try:
                                                buzzer = machine.Pin(
                                                    12, machine.Pin.OUT)
                                                buzzer.value(0)
                                            except:
                                                print(
                                                    "Buzzer Pin Initialize Error")
                                            try:
                                                while True:
                                                    scanTemperature(
                                                        tempSensor, proximitySensor, oledDisplay, buzzer)
                                            except:
                                                print("Process Startup Error")
                                        except:
                                            print("Network Connection Error")
                                            oledDisplay.fill(0)
                                            oledDisplay.text(
                                                "NETWORK ERROR", 20, 20)
                                            time.sleep_ms(1000)
                                    except:
                                        print(
                                            "OLED Display Initialization Error")
                                except:
                                    print("Sensors Initialization Error")
                            except:
                                print("I2C Configuration Error")
                        except:
                            print("Error Starting the Device")
                    except:
                        print("Built-In Modules Import Error")
                except:
                    print("UJSON Module Import Error")
            except:
                print("Requests Module Import Error")
        except:
            print("Network Module Import Error")
    except:
        print("OLED Display Driver Import Error")
except:
    print("IR Thermistor Driver Import Error")


def connectToNetwork():
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    if not wlan.isconnected():
        print('connecting to network...')
        try:
            try:
                wlan.connect('PhantomNode01', 'skywalker')
                while not wlan.isconnected():
                    pass
            except:
                print("Could not connect to PhantomNode01")
                try:
                    wlan.connect('Phantom', '8754462663')
                    while not wlan.isconnected():
                        pass
                except:
                    print("Could not connect to Phantom")
                    try:
                        wlan.connect('LICET WIFI', 'Licet@#786')
                        while not wlan.isconnected():
                            pass
                    except:
                        print("Could not connect to LICET WIFI")

            print('network config:', wlan.ifconfig())
            # Start Webrepl
            webrepl.start()
        except:
            print("NETWORK ERROR")


def scanTemperature(tempSensor, proximitySensor, oledDisplay, buzzer):
    try:
        distance = proximitySensor.distance_cm()
        if distance < 40:
            temperature = tempSensor.read_object_temp()
            # Fahrenheit Conversion & Temperature Offset for Distance
            temperature = ((float(temperature) * 9 / 5) + 32) + 12
            print(temperature)

            oledDisplay.fill(0)
            oledDisplay.text(str(temperature), 35, 0)
            oledDisplay.show()

            if temperature > 99:
                buzzer.value(1)
                oledDisplay.text("ALERT!!", 20, 20)
                oledDisplay.text("GO BACK FOR PIC", 0, 40)
                oledDisplay.show()

                try:  # Insert Temperature to DB
                    oledDisplay.fill(0)
                    oledDisplay.text("INSERTING", 20, 20)
                    oledDisplay.text("TO DB", 0, 40)
                    oledDisplay.show()
                    response = requests.get(
                        "https://caliditas.herokuapp.com/scan?rollno=19IT049&deviceId=3&temp=" + str(temperature))
                except:
                    print("DB ERROR")

                try:  # Ping Notif Discord
                    oledDisplay.fill(0)
                    oledDisplay.text("ALERTING", 20, 20)
                    oledDisplay.text("OFFICIALS", 0, 40)
                    oledDisplay.show()

                    discordResponse = requests.request("POST", "https://discord.com/api/webhooks/890522840821006366/Ol38KeLTe2aXel4y2ECnDLuiDdilNYiEjrhMYHTKp8FsGyVPn6CFHD5HwM-7nCR8ww0B", headers={
                        'Content-Type': 'application/json',
                        'Cookie': '__cfruid=b882f9b808096b92c166f27597787a81fff7a4cf-1632389271; __dcfduid=88e1af7c1c5011ecbc9842010a0a066c; __sdcfduid=88e1af7c1c5011ecbc9842010a0a066c8b54e6b16757ef5e34f069e7077c55d22b13cb99c9f9a5a17bafc3d214f0e507'
                    }, data=json.dumps({
                        "content": "WARNING: A person has fever of **" + str(temperature) + "** - Take Caution."
                    }))
                except:
                    print("NOTIF ERROR")
                time.sleep_ms(500)

            else:
                buzzer.value(0)
                oledDisplay.text("YOU MAY PASS", 15, 20)
                oledDisplay.show()
                time.sleep_ms(1000)
        else:
            oledDisplay.fill(0)
            oledDisplay.text("NO ONE HERE", 15, 20)
            oledDisplay.show()
            time.sleep_ms(500)
    except:
        print("Sensor Read Error")
